plugins {
    id 'java'
}

group 'cn.mingbai'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/public/' }
    maven { url 'https://maven.aliyun.com/repository/jcenter/' }
    maven { url 'https://hub.spigotmc.org/nexus/service/local/repositories/snapshots/content/' }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://oss.sonatype.org/content/repositories/central' }
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    compileOnly 'org.spigotmc:spigot-api:1.19.2-R0.1-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot:1.19.2-R0.1-SNAPSHOT:remapped-mojang'
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
task remappingJar{
    doLast {
        def path = new File('build/libs/remapped/')
        if (!path.exists()) {
            path.mkdirs()
        }
        def out = new ByteArrayOutputStream()
        exec {
            ExecSpec execSpec ->
                executable 'cmd'
                args '/c', "remapping.bat"
                standardOutput = out
        }
        println(out.toString())
        out.close()
    }
}
remappingJar.dependsOn jar
jar {
    baseName = 'ScreenInMC'
    version = ''
}
jar.from {
    configurations.compileClasspath.findAll {
//        it.name.contains('jocl')
    }.collect {
        zipTree it
    }
}
test {
    useJUnitPlatform()
}
